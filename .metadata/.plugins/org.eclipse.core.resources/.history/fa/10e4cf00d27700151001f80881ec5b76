package com.psamp.util;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

public class CalculatorTest {
	
//	Declare calculator object.
	Calculator calc;
	
//	Before every test, initialize calc to a new Calculator object.
	@Before public void beforeTests() {
		calc = new Calculator();
	}
	
//	Tests for all Calculator methods.
	@Test
	public void testAddThese() {
		
		double expected = 10;
		double actual = calc.addThese(5, 5);
		double delta = .001;
		
		calc.addThese(5, 5);
		assertEquals(expected, actual, delta);
	}

	@Test
	public void testSubtractThese() {
		
		double expected = 0;
		double actual = calc.subtractThese(5, 5);
		double delta = .001;
		
		assertEquals(expected, actual, delta);
		
	}

	@Test
	public void testMultiplyTheseInts() {
		
		int expected = 10;
		int actual = calc.multiplyThese(2, 5);
		
		assertEquals(expected, actual);
	}
	
	@Test
	public void testMultiplyTheseDouble() {
		
		double expected = 11;
		double actual = calc.multiplyThese(2, 5.5);
		double delta = .001;
		
		assertEquals(expected, actual, delta);
	}

	@Test
	public void testDivideTheseDoubles() {
		
		double expected = 2.09090909091;
		double actual = calc.divideThese(11.5, 5.5);
		double delta = .001;
		
		assertEquals(expected, actual, delta);
	}

	@Test
	public void testDivideTheseInts() {
		
		int expected = 5;
		int actual = calc.divideThese(10, 2);
		
		assertEquals(expected, actual);
	}

	@Test
	public void testGetLength() {
		
		int expected = 25;
		int actual = calc.getLength("lorem ipsum dolor si amet");
		double delta = .001;
		
		assertEquals(expected, actual, delta);
	}

	@Test
	public void testFirstLarger() {
		
		boolean expected = true;
		boolean actual = calc.firstLarger(456, 85);
		
		assertEquals(expected, actual);
	}
	
	@Test
	public void testFirstLargerString() {
		
		boolean expected = true;
		boolean actual = calc.firstLarger("Princess", "Hey");
		
		assertEquals(expected, actual);
	}

	@Test
	public void testSumArray() {
		
		double arr[] = {10, 20, 30};
		double expected = 60;
		double actual = calc.sumArray(arr, "testSumArray") ;
		double delta = .001;
		
		assertEquals(expected, actual, delta);
	}

	@Test
	public void testSumArrayNegative() {
		
		double arr[] = {10, 20, -30};
		double expected = 0;
		double actual = calc.sumArrayNegative(arr, "testSumArray");
		double delta = .001;
		
		assertEquals(expected, actual, delta);
	}

	@Test
	public void testCountValues() {
		
		double arr[] = {10, 20, 30, 60, 60, 60};
		double expected = 3;
		double actual = calc.countValues(arr, 60);
		double delta = .001;
		
		assertEquals(expected, actual, delta);
		
	}

}
